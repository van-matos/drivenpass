generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model sessions {
  id     Int     @id @default(autoincrement())
  userId Int
  token  String?
  users  users   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  cards       cards[]
  credentials credentials[]
  securenotes securenotes[]
  sessions    sessions[]
}

model credentials {
  id       Int    @id @default(autoincrement())
  userId   Int
  url      String
  username String
  password String
  title    String
  users    users  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([title, userId])
}

model securenotes {
  id          Int    @id @default(autoincrement())
  userId      Int
  title       String @db.VarChar(50)
  description String @db.VarChar(1000)
  users       users  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([title, userId])
}

model cards {
  id             Int     @id @default(autoincrement())
  userId         Int
  number         String
  name           String
  securityCode   String
  expirationDate String
  isVirtual      Boolean
  password       String
  type           type
  title          String
  users          users   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([title, userId])
}

enum type {
  credit
  debit
  combination
}
